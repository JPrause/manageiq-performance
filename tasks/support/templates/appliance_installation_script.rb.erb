#!/usr/env ruby

require "base64"
require "rubygems/installer"
require "bundler/lockfile_parser"
require "bundler/definition"

GEM_INSTALL_DIR          = "/tmp/manageiq-performance-gem-dir"

<% unless @solo_gem -%>
MIQPERF_GEM_NAME         = "<%= @gemspec.name %>"
MIQPERF_GEM_VERSION      = "<%= @gemspec.version %>"
MIQPERF_FULL_GEM_NAME    = "#{MIQPERF_GEM_NAME}-#{MIQPERF_GEM_VERSION}"
MIQPERF_INSTALL_LOCATION = "#{GEM_INSTALL_DIR}/gems/#{MIQPERF_FULL_GEM_NAME}"
<% end -%>

<% if @stackprof_gemspec and @stackprof_gem_base64_string and not @solo_gem -%>
STACKPROF_GEM_NAME         = "<%= @stackprof_gemspec.name %>"
STACKPROF_GEM_VERSION      = "<%= @stackprof_gemspec.version %>"
STACKPROF_FULL_GEM_NAME    = "#{STACKPROF_GEM_NAME}-#{STACKPROF_GEM_VERSION}"
STACKPROF_INSTALL_LOCATION = "#{GEM_INSTALL_DIR}/gems/#{STACKPROF_FULL_GEM_NAME}"
<% end -%>

<% if @other_gems -%>
<% @other_gems.each do |gem| -%>
<%= gem[:env_name] %>_GEM_NAME         = "<%= gem[:name] %>"
<%= gem[:env_name] %>_GEM_VERSION      = "<%= gem[:gemspec].version %>"
<%= gem[:env_name] %>_FULL_GEM_NAME    = "#{<%= gem[:env_name] %>_GEM_NAME}-#{<%= gem[:env_name] %>_GEM_VERSION}"
<%= gem[:env_name] %>_INSTALL_LOCATION = "#{GEM_INSTALL_DIR}/gems/#{<%= gem[:env_name] %>_FULL_GEM_NAME}"
<% end -%>
<% end -%>

VMDB_DIR                 = "/var/www/miq/vmdb"

<% installed_gem = @solo_gem ? "#{@other_gems.first[:name]}.gem" : "manageiq-performance.gem" -%>
# The following string is a base64 encoded string of the
# <%= installed_gem %> file, and was generated by using the following rake
# task in the project
#
#     $ rake generate_install_script
#
# Concept take from the 'pip' project and the bootstrap script for it found
# here:
#
#     https://bootstrap.pypa.io/get-pip.py
#
# The source for generating the that zip blob can also be found here:
#
#     https://github.com/pypa/get-pip/blob/master/tasks/generate.py
#
<% unless @solo_gem -%>
MIQPERF_GEM_BUNDLE = <<-GEM
<%= @gem_base64_string -%>
GEM
<% end -%>

<% if @stackprof_gemspec and @stackprof_gem_base64_string -%>
STACKPROF_GEM_BUNDLE = <<-STACKPROF_GEM
<%= @stackprof_gem_base64_string -%>
STACKPROF_GEM
<% end -%>

<% if @other_gems -%>
<% @other_gems.each do |gem| -%>
<%= gem[:env_name] %>_GEM_BUNDLE = <<-GEM_DATA
<%= gem[:gem_base64_string] -%>
GEM_DATA
<% end -%>
<% end -%>


<% unless @solo_gem -%>
##### Install manageiq-performance #####
puts "Installing manageiq-performance.gem"

gem_file = "/tmp/#{MIQPERF_FULL_GEM_NAME}.gem"
File.write gem_file, Base64.decode64(MIQPERF_GEM_BUNDLE)

Gem::Installer.new(gem_file, :install_dir => GEM_INSTALL_DIR).install
<% end -%>


<% if @stackprof_gemspec and @stackprof_gem_base64_string -%>
##### Install stackprof #####
puts "Installing stackprof.gem"

gem_file = "/tmp/#{STACKPROF_FULL_GEM_NAME}.gem"
File.write gem_file, Base64.decode64(STACKPROF_GEM_BUNDLE)

Gem::Installer.new(gem_file, :install_dir => GEM_INSTALL_DIR).install
<% end -%>

<% if @other_gems -%>
<% @other_gems.each do |gem| -%>
##### Install <%= gem[:name] %> #####
puts "Installing <%= gem[:name] %>.gem"

gem_file = "/tmp/#{<%= gem[:env_name] %>_FULL_GEM_NAME}.gem"
File.write gem_file, Base64.decode64(<%= gem[:env_name] %>_GEM_BUNDLE)

Gem::Installer.new(gem_file, :install_dir => GEM_INSTALL_DIR).install
<% end -%>
<% end -%>


######### Update Gemfile.lock ##########
puts "Updating Gemfile.lock"

# Parse existing Gemfile/Gemfile.lock
gemfile    = File.expand_path "#{VMDB_DIR}/Gemfile"
lockfile   = File.expand_path "#{VMDB_DIR}/Gemfile.lock"
definition = Bundler::Definition.build gemfile, lockfile, nil
definition.to_lock

<% unless @solo_gem -%>
# Build sources, dependencies and spec for manageiq_performance
miqperf_version      = Gem::Version.new(MIQPERF_GEM_VERSION)
miqperf_bundler_src  = Bundler::Source::Path.from_lock "remote" => MIQPERF_INSTALL_LOCATION
miqperf_bundler_dep  = Bundler::Dependency.new MIQPERF_GEM_NAME, nil, "source" => miqperf_bundler_src
miqperf_bundler_spec = Bundler::LazySpecification.new MIQPERF_GEM_NAME, miqperf_version, Gem::Platform::RUBY
miqperf_bundler_spec.source = miqperf_bundler_src

# Add source, spec, and dependency to existing definition
definition.dependencies << miqperf_bundler_dep
definition.send(:sources).send :add_path_source, miqperf_bundler_src.options
definition.send(:resolve)[miqperf_bundler_spec.identifier] = miqperf_bundler_spec
<% end -%>

<% if @stackprof_gemspec and @stackprof_gem_base64_string -%>
# Build sources, dependencies and spec for stackprof
stackprof_version      = Gem::Version.new(STACKPROF_GEM_VERSION)
stackprof_bundler_src  = Bundler::Source::Path.from_lock "remote" => STACKPROF_INSTALL_LOCATION
stackprof_bundler_dep  = Bundler::Dependency.new STACKPROF_GEM_NAME, nil, "source" => stackprof_bundler_src
stackprof_bundler_spec = Bundler::LazySpecification.new STACKPROF_GEM_NAME, stackprof_version, Gem::Platform::RUBY
stackprof_bundler_spec.source = stackprof_bundler_src

# Add source, spec, and dependency to existing definition
definition.dependencies << stackprof_bundler_dep
definition.send(:sources).send :add_path_source, stackprof_bundler_src.options
definition.send(:resolve)[stackprof_bundler_spec.identifier] = stackprof_bundler_spec
<% end -%>

<% if @other_gems -%>
<% @other_gems.each do |gem| -%>
# Build sources, dependencies and spec for <%= gem[:name] %>
new_gem_version      = Gem::Version.new(<%= gem[:env_name] %>_GEM_VERSION)
new_gem_bundler_src  = Bundler::Source::Path.from_lock "remote" => <%= gem[:env_name] %>_INSTALL_LOCATION
new_gem_bundler_dep  = Bundler::Dependency.new <%= gem[:env_name] %>_GEM_NAME, nil, "source" => new_gem_bundler_src
new_gem_bundler_spec = Bundler::LazySpecification.new <%= gem[:env_name] %>_GEM_NAME, new_gem_version, Gem::Platform::RUBY
new_gem_bundler_spec.source = new_gem_bundler_src

# Add source, spec, and dependency to existing definition
definition.dependencies << new_gem_bundler_dep
definition.send(:sources).send :add_path_source, new_gem_bundler_src.options
definition.send(:resolve)[new_gem_bundler_spec.identifier] = new_gem_bundler_spec
<% end -%>
<% end -%>

# Write the file
File.open("#{VMDB_DIR}/Gemfile.lock", "wb") do |file|
  file.puts definition.to_lock
end


############ Update Gemfile ############
puts "Updating Gemfile"

gemfile_addition = <<-GEMFILE_ADDITION

<% unless @solo_gem -%>
gem "manageiq-performance", "=#{MIQPERF_GEM_VERSION}",
    :require => ["manageiq_performance/railtie/middleware"],
    :path    => "#{MIQPERF_INSTALL_LOCATION}"
<% end -%>

<% if @stackprof_gemspec and @stackprof_gem_base64_string -%>
gem "stackprof", "=#{STACKPROF_GEM_VERSION}", :require => false,
    :path    => "#{STACKPROF_INSTALL_LOCATION}"
<% end -%>

<% if @other_gems -%>
<% @other_gems.each do |gem| -%>
gem "<%= gem[:name] %>", "=#{<%= gem[:env_name] %>_GEM_VERSION}", :require => false,
    :path    => "#{<%= gem[:env_name] %>_INSTALL_LOCATION}"
<% end -%>
<% end -%>
GEMFILE_ADDITION

File.open("#{VMDB_DIR}/Gemfile", "a") do |gemfile|
  gemfile.puts gemfile_addition
end



<% unless @solo_gem -%>
### Add manageiq_performance config ####
puts "Writing manageiq-performance config"

manageiq_performance_config = <<-EOF
# include_stack_traces: true
browser_mode:
  enabled: true
  always_on: true
middleware:
  - active_support_timers
  - active_record_queries
<%= "  - stackprof" if @stackprof_gemspec and @stackprof_gem_base64_string %>
middleware_storage:
  - log
EOF

File.open("#{VMDB_DIR}/.miq_performance", "wb") do |config_file|
  config_file.puts manageiq_performance_config
end



# After this is all complete, you should be able to run
#
#   $ systemctl restart evmserverd
#
# And the middleware should now be running with the appliance
<% end -%>
